{"version":3,"file":"tippex.umd.js","sources":["../src/getLocation.js","../src/index.js"],"sourcesContent":["export default function getLocation ( source, charIndex ) {\n\tconst lines = source.split( '\\n' );\n\tconst len = lines.length;\n\n\tfor ( let i = 0, lineStart = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > charIndex ) {\n\t\t\treturn { line: i + 1, column: charIndex - lineStart };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( `Could not determine location of character ${charIndex}` );\n}\n","import getLocation from './getLocation.js';\n\nconst keywords = /(case|default|delete|do|else|in|instanceof|new|return|throw|typeof|void)\\s*$/;\nconst punctuators = /(^|\\{|\\(|\\[\\.|;|,|<|>|<=|>=|==|!=|===|!==|\\+|-|\\*\\%|<<|>>|>>>|&|\\||\\^|!|~|&&|\\|\\||\\?|:|=|\\+=|-=|\\*=|%=|<<=|>>=|>>>=|&=|\\|=|\\^=|\\/=|\\/)\\s*$/;\nconst ambiguous = /(\\}|\\)|\\+\\+|--)\\s*$/;\n\nexport function find ( str ) {\n\tlet quote;\n\tlet escapedFrom;\n\tlet regexEnabled = true;\n\tlet pfixOp = false;\n\tlet stack = [];\n\n\tlet start;\n\tlet found = [];\n\tlet state = base;\n\n\tfunction base ( char, i ) {\n\t\tif ( char === '/' ) {\n\t\t\t// could be start of regex literal OR division punctuator. Solution via\n\t\t\t// http://stackoverflow.com/questions/5519596/when-parsing-javascript-what-determines-the-meaning-of-a-slash/27120110#27120110\n\t\t\tconst substr = str.substr( 0, i );\n\t\t\tif ( keywords.test( substr ) || punctuators.test( substr ) ) regexEnabled = true;\n\t\t\telse if ( ambiguous.test( substr ) && !tokenClosesExpression( substr, found ) ) regexEnabled = true; // TODO save this determination for when it's necessary?\n\t\t\telse regexEnabled = false;\n\n\t\t\treturn start = i, slash;\n\t\t}\n\n\t\tif ( char === '\"' || char === \"'\" ) return start = i, quote = char, string;\n\t\tif ( char === '`' ) return start = i, templateString;\n\n\t\tif ( char === '{' ) return stack.push( base ), base;\n\t\tif ( char === '}' ) return start = i, stack.pop();\n\n\t\tif ( !( pfixOp && /\\W/.test( char ) ) ) {\n\t\t\tpfixOp = ( char === '+' && str[ i - 1 ] === '+' ) || ( char === '-' && str[ i - 1 ] === '-' );\n\t\t}\n\n\t\treturn base;\n\t}\n\n\tfunction slash ( char ) {\n\t\tif ( char === '/' ) return lineComment;\n\t\tif ( char === '*' ) return blockComment;\n\t\tif ( char === '[' ) return regexEnabled ? regexCharacter : base;\n\t\treturn regexEnabled && !pfixOp ? regex : base;\n\t}\n\n\tfunction regex ( char, i ) {\n\t\tif ( char === '[' ) return regexCharacter;\n\t\tif ( char === '\\\\' ) return escapedFrom = regex, escaped;\n\n\t\tif ( char === '/' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -1 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'regex' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn regex;\n\t}\n\n\tfunction regexCharacter ( char ) {\n\t\tif ( char === ']' ) return regex;\n\t\tif ( char === '\\\\' ) return escapedFrom = regexCharacter, escaped;\n\t\treturn regexCharacter;\n\t}\n\n\tfunction string ( char, i ) {\n\t\tif ( char === '\\\\' ) return escapedFrom = string, escaped;\n\t\tif ( char === quote ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -1 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'string' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn string;\n\t}\n\n\tfunction escaped () {\n\t\treturn escapedFrom;\n\t}\n\n\tfunction templateString ( char, i ) {\n\t\tif ( char === '$' ) return templateStringDollar;\n\t\tif ( char === '\\\\' ) return escapedFrom = templateString, escaped;\n\n\t\tif ( char === '`' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -1 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'templateEnd' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn templateString;\n\t}\n\n\tfunction templateStringDollar ( char, i ) {\n\t\tif ( char === '{' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 1, -2 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'templateChunk' });\n\n\t\t\tstack.push( templateString );\n\t\t\treturn base;\n\t\t}\n\t\treturn templateString( char, i );\n\t}\n\n\tfunction lineComment ( char, end ) {\n\t\tif ( char === '\\n' ) {\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 2 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'line' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn lineComment;\n\t}\n\n\tfunction blockComment ( char ) {\n\t\tif ( char === '*' ) return blockCommentEnding;\n\t\treturn blockComment;\n\t}\n\n\tfunction blockCommentEnding ( char, i ) {\n\t\tif ( char === '/' ) {\n\t\t\tconst end = i + 1;\n\t\t\tconst outer = str.slice( start, end );\n\t\t\tconst inner = outer.slice( 2, -2 );\n\n\t\t\tfound.push({ start, end, inner, outer, type: 'block' });\n\n\t\t\treturn base;\n\t\t}\n\n\t\treturn blockComment( char );\n\t}\n\n\tfor ( let i = 0; i < str.length; i += 1 ) {\n\t\tif ( !state ) {\n\t\t\tconst { line, column } = getLocation( str, i );\n\t\t\tconst before = str.slice( 0, i );\n\t\t\tconst beforeLine = /(^|\\n).+$/.exec( before )[0];\n\t\t\tconst after = str.slice( i );\n\t\t\tconst afterLine = /.+(\\n|$)/.exec( after )[0];\n\n\t\t\tconst snippet = `${beforeLine}${afterLine}\\n${ Array( beforeLine.length + 1 ).join( ' ' )}^`;\n\n\t\t\tthrow new Error( `Unexpected character (${line}:${column}). If this is valid JavaScript, it's probably a bug in tippex. Please raise an issue at https://github.com/Rich-Harris/tippex/issues â€“ thanks!\\n\\n${snippet}` );\n\t\t}\n\n\t\tstate = state( str[i], i );\n\t}\n\n\treturn found;\n}\n\nfunction tokenClosesExpression ( substr, found ) {\n\tsubstr = _erase( substr, found );\n\n\tlet token = ambiguous.exec( substr );\n\tif ( token ) token = token[1];\n\n\tif ( token === ')' ) {\n\t\tlet count = 0;\n\t\tlet i = substr.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( substr[i] === ')' ) {\n\t\t\t\tcount += 1;\n\t\t\t}\n\n\t\t\tif ( substr[i] === '(' ) {\n\t\t\t\tcount -= 1;\n\t\t\t\tif ( count === 0 ) {\n\t\t\t\t\ti -= 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if parenthesized expression is immediately preceded by `if`/`while`, it's not closing an expression\n\t\twhile ( /\\s/.test( substr[i - 1] ) ) i -= 1;\n\t\tif ( substr.slice( i - 2, i ) === 'if' || substr.slice( i - 5, i ) === 'while' ) return false;\n\t}\n\n\t// TODO handle }, ++ and -- tokens immediately followed by / character\n\treturn true;\n}\n\nfunction spaces ( count ) {\n\tlet spaces = '';\n\twhile ( count-- ) spaces += ' ';\n\treturn spaces;\n}\n\nconst erasers = {\n\tstring: chunk => chunk.outer[0] + spaces( chunk.inner.length ) + chunk.outer[0],\n\tline: chunk => spaces( chunk.outer.length ),\n\tblock: chunk => chunk.outer.split( '\\n' ).map( line => spaces( line.length ) ).join( '\\n' ),\n\tregex: chunk => '/' + spaces( chunk.inner.length ) + '/',\n\ttemplateChunk: chunk => chunk.outer[0] + spaces( chunk.inner.length ) + '${',\n\ttemplateEnd: chunk => chunk.outer[0] + spaces( chunk.inner.length ) + '`'\n};\n\nexport function erase ( str ) {\n\tconst found = find( str );\n\treturn _erase( str, found );\n}\n\nfunction _erase ( str, found ) {\n\tlet erased = '';\n\tlet charIndex = 0;\n\n\tfor ( let i = 0; i < found.length; i += 1 ) {\n\t\tconst chunk = found[i];\n\t\terased += str.slice( charIndex, chunk.start );\n\t\terased += erasers[ chunk.type ]( chunk );\n\n\t\tcharIndex = chunk.end;\n\t}\n\n\terased += str.slice( charIndex );\n\treturn erased;\n}\n\nfunction makeGlobalRegExp ( original ) {\n\tlet flags = 'g';\n\n\tif ( original.multiline ) flags += 'm';\n\tif ( original.ignoreCase ) flags += 'i';\n\tif ( original.sticky ) flags += 'y';\n\tif ( original.unicode ) flags += 'u';\n\n\treturn new RegExp( original.source, flags );\n}\n\nexport function match ( str, pattern, callback ) {\n\tconst g = pattern.global;\n\tif ( !g ) pattern = makeGlobalRegExp( pattern );\n\n\tconst found = find( str );\n\n\tlet match;\n\tlet chunkIndex = 0;\n\n\twhile ( match = pattern.exec( str ) ) {\n\t\tlet chunk;\n\n\t\tdo {\n\t\t\tchunk = found[ chunkIndex ];\n\n\t\t\tif ( chunk && chunk.end < match.index ) {\n\t\t\t\tchunkIndex += 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while ( chunk );\n\n\t\tif ( !chunk || chunk.start > match.index ) {\n\t\t\tconst args = [].slice.call( match ).concat( match.index, str );\n\t\t\tcallback.apply( null, args );\n\t\t\tif ( !g ) break;\n\t\t}\n\t}\n}\n\nexport function replace ( str, pattern, callback ) {\n\tlet replacements = [];\n\n\tmatch( str, pattern, function ( match ) {\n\t\tconst start = arguments[ arguments.length - 2 ];\n\t\tconst end = start + match.length;\n\t\tconst content = callback.apply( null, arguments );\n\n\t\treplacements.push({ start, end, content });\n\t});\n\n\tlet replaced = '';\n\tlet lastIndex = 0;\n\n\tfor ( let i = 0; i < replacements.length; i += 1 ) {\n\t\tconst { start, end, content } = replacements[i];\n\t\treplaced += str.slice( lastIndex, start ) + content;\n\n\t\tlastIndex = end;\n\t}\n\n\treplaced += str.slice( lastIndex );\n\n\treturn replaced;\n}\n"],"names":["const","let"],"mappings":"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"}