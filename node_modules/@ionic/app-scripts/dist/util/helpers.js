"use strict";
var fs_1 = require('fs');
exports.objectAssign = (Object.assign) ? Object.assign : function (target, source) {
    var output = Object(target);
    for (var index = 1; index < arguments.length; index++) {
        source = arguments[index];
        if (source !== undefined && source !== null) {
            for (var key in source) {
                if (source.hasOwnProperty(key)) {
                    output[key] = source[key];
                }
            }
        }
    }
    return output;
};
function endsWith(str, tail) {
    if (str && tail) {
        return !tail.length || str.slice(-tail.length).toLowerCase() === tail.toLowerCase();
    }
    return false;
}
exports.endsWith = endsWith;
function writeFileAsync(filePath, content) {
    return new Promise(function (resolve, reject) {
        fs_1.writeFile(filePath, content, function (err) {
            if (err) {
                reject(err);
            }
            else {
                resolve();
            }
        });
    });
}
exports.writeFileAsync = writeFileAsync;
function readFileAsync(filePath) {
    return new Promise(function (resolve, reject) {
        fs_1.readFile(filePath, function (err, buffer) {
            if (err) {
                reject(err);
            }
            else {
                resolve(buffer.toString());
            }
        });
    });
}
exports.readFileAsync = readFileAsync;
