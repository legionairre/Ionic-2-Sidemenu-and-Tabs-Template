// Ported from 'rollup-plugin-typescript':
// https://github.com/rollup/rollup-plugin-typescript
// MIT Licenced
"use strict";
var transpile_1 = require('../transpile');
var typescript_helpers_1 = require('../util/typescript-helpers');
var template_1 = require('../template');
var pluginutils = require('rollup-pluginutils');
function ionCompiler(options) {
    var filter = pluginutils.createFilter(options.include || ['*.ts+(|x)', '**/*.ts+(|x)'], options.exclude || ['*.d.ts', '**/*.d.ts']);
    var compilerOptions = transpile_1.getCompilerOptions(options.rootDir);
    compilerOptions.sourceMap = options.sourceMap;
    return {
        name: 'ion-compiler',
        resolveId: function (importee, importer) {
            return transpile_1.resolveId(importee, importer, compilerOptions);
        },
        load: function (id) {
            if (id === typescript_helpers_1.helpersId) {
                return typescript_helpers_1.helperFns;
            }
        },
        transform: function (sourceText, sourcePath) {
            if (filter(sourcePath)) {
                sourceText = template_1.inlineTemplate(sourceText, sourcePath);
                return transpile_1.transpile(sourceText, sourcePath, compilerOptions, true);
            }
        }
    };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ionCompiler;
